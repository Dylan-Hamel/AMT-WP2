/**
 * NOTE: This class is auto generated by the swagger code generator program (2.2.3).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import io.swagger.model.PointScale;

import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2019-01-08T14:04:10.019+01:00")

@Api(value = "pointScales", description = "the pointScales API")
public interface PointScalesApi {

    @ApiOperation(value = "List point scales linked to current application", notes = "", response = PointScale.class, responseContainer = "List", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully done", response = PointScale.class, responseContainer = "List") })
    
    @RequestMapping(value = "/pointScales/",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.GET)
    ResponseEntity<List<PointScale>> pointScalesGet();


    @ApiOperation(value = "Deletes specific point scale", notes = "", response = Void.class, tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully done", response = Void.class),
        @ApiResponse(code = 404, message = "No such point scale", response = Void.class) })
    
    @RequestMapping(value = "/pointScales/{name}/",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.DELETE)
    ResponseEntity<Void> pointScalesNameDelete(@ApiParam(value = "Point scale name",required=true ) @PathVariable("name") String name);


    @ApiOperation(value = "Fetch specific point scale", notes = "", response = PointScale.class, responseContainer = "List", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully done", response = PointScale.class, responseContainer = "List"),
        @ApiResponse(code = 404, message = "No such point scale", response = Void.class) })
    
    @RequestMapping(value = "/pointScales/{name}/",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.GET)
    ResponseEntity<List<PointScale>> pointScalesNameGet(@ApiParam(value = "Point scale name",required=true ) @PathVariable("name") String name);


    @ApiOperation(value = "Update specific point scale", notes = "", response = Void.class, tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully done", response = Void.class),
        @ApiResponse(code = 404, message = "No such point scale", response = Void.class),
        @ApiResponse(code = 409, message = "Point scale already exists", response = Void.class) })
    
    @RequestMapping(value = "/pointScales/{name}/",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<Void> pointScalesNamePost(@ApiParam(value = "Point scale name",required=true ) @PathVariable("name") String name,@ApiParam(value = "Required informations" ,required=true )  @Valid @RequestBody PointScale body);


    @ApiOperation(value = "Create point scale", notes = "", response = Void.class, tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 201, message = "Successfully done", response = Void.class),
        @ApiResponse(code = 409, message = "Point scale already existing", response = Void.class) })
    
    @RequestMapping(value = "/pointScales/",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<Void> pointScalesPost(@ApiParam(value = "Required informations" ,required=true )  @Valid @RequestBody PointScale body);

}
