/*
 * AMT
 * Gamification App
 *
 * OpenAPI spec version: 0.1.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package ch.heig.amt.gamification.tests.model;

import java.util.Objects;
import ch.heig.amt.gamification.tests.model.BadgeDTO;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * An user doing various actions in an application
 */
@ApiModel(description = "An user doing various actions in an application")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-01-20T17:27:44.724+01:00")
public class UserDTO {
  @SerializedName("username")
  private String username = null;

  @SerializedName("badges")
  private List<BadgeDTO> badges = null;

  public UserDTO username(String username) {
    this.username = username;
    return this;
  }

   /**
   * The username of the user
   * @return username
  **/
  @ApiModelProperty(value = "The username of the user")
  public String getUsername() {
    return username;
  }

  public void setUsername(String username) {
    this.username = username;
  }

  public UserDTO badges(List<BadgeDTO> badges) {
    this.badges = badges;
    return this;
  }

  public UserDTO addBadgesItem(BadgeDTO badgesItem) {
    if (this.badges == null) {
      this.badges = new ArrayList<BadgeDTO>();
    }
    this.badges.add(badgesItem);
    return this;
  }

   /**
   * User&#39;s badges
   * @return badges
  **/
  @ApiModelProperty(value = "User's badges")
  public List<BadgeDTO> getBadges() {
    return badges;
  }

  public void setBadges(List<BadgeDTO> badges) {
    this.badges = badges;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UserDTO userDTO = (UserDTO) o;
    return Objects.equals(this.username, userDTO.username) &&
        Objects.equals(this.badges, userDTO.badges);
  }

  @Override
  public int hashCode() {
    return Objects.hash(username, badges);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UserDTO {\n");
    
    sb.append("    username: ").append(toIndentedString(username)).append("\n");
    sb.append("    badges: ").append(toIndentedString(badges)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

